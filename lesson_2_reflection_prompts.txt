
command line: ls -a

mostra os arquivos . obscuros também

--

git init

inicia ou CRIA um novo repositório!

--

git init Não faz nenhum commit

deu git init, se der git log, tem zero commits!

--

git status

comando para mostrar quais coisas mudaram!

--

What happens when you initialize a repository? Why do you need to do it?

eu inicio um repositório e começo a trackear a versão dos arquivos que estão nele
vc precisa indicar pro git que vai começar a traquear!

--

staging area -> te dá mais controle, um passo intermediário, para vc tentar manter
os commits apenas quando houver alterações lógicas!

--

git add file_1.txt
git add file_2.txt
git add file_3.txt

esse comando git add arquivo

adiciona determinado arquivo para a STAGING area

--

How is the staging area different from the working directory and the repository?
What value do you think it offers?

é um passo intermediário! permite organizar melhor os commits, para fazer um commit
a cada passo lógico!

--

Como reverter um git add se eu ainda não dei commit?

use git reset text_file.txt

--

fiz a alteração, ainda NÃO dei git add

se eu der "git diff", sem parâmetro nenhum

o git me mostra exatamente o que eu errei!

--

git diff --staged

esse comando me mostra a diferença entre os arquivos na staging area e no repo

--

"git diff" -> compara "working directory" e "staging area"

"git diff --staged" -> compara "staing area" e "commit 1"

"git diff commit_1 commit_2" -> compara "commit_1" e "commit_2"

--

How can you use the staging area to make sure you have one commit per logical
change?

--

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

--

git branch

me mostra os ramos que foram criados, se tiver só o master, não teve ramificação

--

git log --graph --oneline master other_branch

isso faz comparar, com boa visualização gráfica, dois ramos
o ramo master, principal, e o ramo other_branch

--

se eu quiser adicionar um ramo

git branch nome_do_novo_ramo

--

How do the diagrams help you visualize the branch structure?

--

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

--

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

--

HEAD = current commit 

--

dois domandos em um

git checkout -b new_branch é a mesma coisa que git branch new_branch +
                                               git checkout new_branch
--

merge é complicado!

depende do arquivo original

por exemplo, tem um arquivo original

uma pessoa deleta uma parada, a outra mantem

se fizer o merge, na versão final, NÃO vai ter o que foi deletado! Mesmo que uma
das versões tenha o que foi deletado!

--

working directory -> staging area -> repository

--

git show

mostra a diferença desse commit com o seu pai

--

Restore your files to their state before you started the merge by running

git merge --abort 

--


